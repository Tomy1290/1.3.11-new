<analysis>
The AI engineer successfully initiated the Scarletts Gesundheitstracking app, but encountered persistent Android build crashes related to . This led to a strategic decision to rollback to a stable 1.0.2 version and incrementally rebuild features into a new 1.1.1 repository. Initial progress included implementing advanced settings (data backup, custom reminders, water cup volume), overcoming an  build failure by replacing it with , and clarifying reminder logic. The trajectory then diverted as the user requested a detailed feature breakdown from 1.0.2 to 1.0.5, which was provided. Following this, the user instructed to load the 1.0.3 codebase, resulting in a corrupted frontend directory. The current state involves a broken development environment, an empty/corrupted codebase, and a new, detailed request for cycle tracking implementation.
</analysis>

<product_requirements>
The Scarletts Gesundheitstracking app is an offline-first Android/iOS health tracker, supporting German/English. It features a dashboard (day navigation, XP/Level, modules for Pills, Drinks & Sport, Weight & Goals), comprehensive Reminders (CRUD, native notifications, Sport, custom up to 10), and Gamification (40+ achievements, leveling, events). Other features include Gugi AI chat, Saved Messages, advanced Settings (themes, data I/O, language, app version, AI/Events toggles), Advanced AI insights, and an offline Leaderboard, adhering to mobile UX best practices.

Features to be rebuilt/implemented in version 1.1.1 include:
1.  **Settings**: Scrollable layout, language toggle, Android-only Data Backup (Export/Import JSON via SAF). Reminders: Sport reminder (once in standard list); Eigene + button for up to 10 custom reminders (editable time/label, activate/deactivate, scheduling). Water cup volume setting (100-500ml in 50ml steps, default 250ml).
2.  **Cycle Tracking**: Monthly calendar with legend (cycle days, fertile, ovulation, expected start). Daily logging (Mood, Energy, Pain, Sleep 1-10 scale; Sex yes/no; Notes). Analysis (Trends, Heatmap, History, Correlations, Predictions) based on entries, using standard values if <6 periods recorded. Expand/make scrollable the existing Cycle dashboard card.
3.  **UI/UX**: Consistent TestIDs, SafeArea, KeyboardAvoidingView, 8pt spacing, larger touch targets, unified iconology.
4.  **Gamification**: Animated full-screen overlays for level-ups/achievements (confetti, haptics, auto-dismiss).
</product_requirements>

<key_technical_concepts>
-   **Expo Router**: File-based routing for navigation.
-   **Zustand with AsyncStorage**: Lightweight state management with local persistence, replacing MMKV.
-   **React Native**: Core UI components and platform abstractions.
-   **Expo Notifications/Haptics**: Native features integration.
-   **Internationalization**: DE/EN language support.
-   **Android Storage Access Framework (SAF)**: For secure data export/import.
-   **Git/GitHub**: Version control and repository management.
</key_technical_concepts>

<code_architecture>
The application employs a full-stack architecture with an Expo React Native  and a FastAPI  using MongoDB. The  adheres to Expo Router's file-based routing convention.



-   : Global UI and notification setup. (Adjusted splash, header,  false).
-   : Application settings. (Changes: scrollable, language toggle, Android SAF data I/O, refined reminder management (Sport once, 10 custom with Eigene + button), water cup volume setting, TestIDs).
-   : Centralized Zustand store. (Changes: Cycle tracking state, XP rules, reminder state, water cup volume. Adapted to use  via ).
-    (New File): An adapter for , replacing  for robust local persistence, resolving native build issues.
-   : Frontend dependencies. ( removed,  and  added,  pinned).

*Current Status*: The  directory is currently corrupted or empty following an attempt to import the 1.0.3 codebase, leading to  and .

</code_architecture>

<pending_tasks>
-   **Restore Codebase**: Resolve the corrupted  directory.
-   **Implement Cycle Tracking**: Develop the calendar, daily logging, and analysis features.
-   **Dashboard Improvements**: Integrate Weight input modal, Cycle card (icon, calendar button), Events category/icon, Drinks & Sport icon.
-   **XP Header Refresh**: Ensure full functionality.
-   **Achievement/Level-up Overlays**: Implement animated overlays.
-   **Standardize **: Apply proposed schema.
-   **Standardize Navigation**: Consistent .
-   **Reactivate ProGuard**: With appropriate .
-   **Re-add Boot-Overlay**.
</pending_tasks>

<current_work>
Immediately prior, the AI engineer provided a comprehensive list of features implemented between versions 1.0.2 and 1.0.5. Following this, the user requested to load the codebase of  into the working directory, as it was deemed the last functioning version. The AI attempted to transfer these files and re-initialize the Git repository, but this process resulted in a corrupted or empty  directory, causing  and  errors when accessing core frontend files like . Despite the broken environment, the user proceeded to provide highly detailed specifications for the Cycle Tracking feature, outlining calendar functionality, daily logging (mood, energy, pain, sleep on a 1-10 scale; sex yes/no; notes input) in a separate day-specific window, and analysis based on existing data.
</current_work>

<optional_next_step>
Restore the  codebase to a functional state (from the 1.0.3 base), then begin implementing the detailed Cycle Tracking feature.
</optional_next_step>
